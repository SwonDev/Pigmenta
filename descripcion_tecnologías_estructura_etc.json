{
  "metadata": {
    "url": "https://kigen.design/color",
    "title": "Color Generator – Kigen",
    "description": "Sin descripción",
    "purpose": "Portfolio / Showcase",
    "category": "Diseño y Creatividad",
    "complexity": "medium",
    "estimatedDevelopmentTime": "3-6 semanas",
    "lastAnalyzed": "2025-09-27T20:23:16.568Z"
  },
  "url": "https://kigen.design/color",
  "technologies": {
    "frontend": {
      "frameworks": [
        {
          "name": "Next.js",
          "version": "unknown",
          "confidence": 0.8,
          "evidence": [
            "Next.js elements detected"
          ],
          "configFiles": [
            "package.json",
            "next.config.js"
          ]
        }
      ],
      "libraries": [
        {
          "name": "D3.js",
          "version": "unknown",
          "purpose": "Data visualization",
          "usage": [
            "Charts",
            "Graphs",
            "Data binding"
          ],
          "cdn": true
        }
      ],
      "buildTools": [
        {
          "name": "Webpack",
          "version": "unknown",
          "configFile": "webpack.config.js",
          "scripts": {
            "build": "webpack",
            "dev": "webpack serve"
          }
        }
      ],
      "packageManager": "npm"
    },
    "styling": {
      "frameworks": [
        "Tailwind CSS",
        "Bulma"
      ],
      "preprocessors": [],
      "methodologies": [
        "BEM",
        "SMACSS",
        "OOCSS"
      ],
      "customProperties": []
    },
    "dependencies": {
      "production": [],
      "development": [],
      "cdn": []
    },
    "consolidated": []
  },
  "architecture": {
    "structure": {
      "type": "static",
      "routing": {
        "type": "server",
        "routes": [
          {
            "path": "/_next/static/media/1e47cc70c48d9dae-s.p.woff2",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/media/5a9db70e0fbc3067-s.p.woff2",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/media/9042b07eb60bc7c5-s.p.woff2",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/media/bb3ef058b751a6ad-s.p.woff2",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/media/d938fffb5d040305-s.p.woff2",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/media/e11ef446ea8817ea-s.p.woff2",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/css/bc3141aff6cb1a57.css?dpl=dpl_4zjXATVcr1k58PjkazJWad9h3bMq",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/css/c4dcdb7588fa278a.css?dpl=dpl_4zjXATVcr1k58PjkazJWad9h3bMq",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/_next/static/chunks/webpack-bbcab5c32677db23.js?dpl=dpl_4zjXATVcr1k58PjkazJWad9h3bMq",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/favicon.ico",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/",
            "lazy": false,
            "protected": false
          },
          {
            "path": "#features",
            "lazy": false,
            "protected": false
          },
          {
            "path": "#faq",
            "lazy": false,
            "protected": false
          },
          {
            "path": "/color",
            "lazy": false,
            "protected": false
          },
          {
            "path": "#",
            "lazy": false,
            "protected": false
          }
        ]
      },
      "components": [
        {
          "name": "next-route-announcer",
          "type": "custom",
          "props": [],
          "children": []
        }
      ],
      "modules": [
        {
          "name": "section",
          "purpose": "section module",
          "exports": [],
          "dependencies": []
        }
      ]
    },
    "patterns": {
      "design": [],
      "architectural": [],
      "stateManagement": {
        "type": "none",
        "stores": []
      }
    },
    "fileOrganization": {
      "structure": "custom",
      "directories": [],
      "conventions": [
        {
          "type": "file",
          "pattern": "kebab-case",
          "examples": [
            "main.js",
            "app.css",
            "user-profile.js"
          ]
        }
      ]
    }
  },
  "design": {
    "colorPalette": {
      "primary": [
        {
          "name": "primary",
          "hex": "rgb(38, 61, 5)",
          "rgb": "rgb(38, 61, 5)",
          "hsl": "rgb(38, 61, 5)",
          "usage": [
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style"
          ]
        },
        {
          "name": "primary",
          "hex": "rgb(165, 244, 47)",
          "rgb": "rgb(165, 244, 47)",
          "hsl": "rgb(165, 244, 47)",
          "usage": [
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style"
          ]
        },
        {
          "name": "primary",
          "hex": "#000",
          "rgb": "#000",
          "hsl": "#000",
          "usage": [
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style"
          ]
        }
      ],
      "secondary": [
        {
          "name": "secondary",
          "hex": "rgb(9, 20, 1)",
          "rgb": "rgb(9, 20, 1)",
          "hsl": "rgb(9, 20, 1)",
          "usage": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "name": "secondary",
          "hex": "rgb(0, 0, 0)",
          "rgb": "rgb(0, 0, 0)",
          "hsl": "rgb(0, 0, 0)",
          "usage": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "name": "secondary",
          "hex": "rgb(255, 255, 255)",
          "rgb": "rgb(255, 255, 255)",
          "hsl": "rgb(255, 255, 255)",
          "usage": [
            "inline-style",
            "inline-style"
          ]
        }
      ],
      "neutral": [
        {
          "name": "neutral",
          "hex": "#fff",
          "rgb": "#fff",
          "hsl": "#fff",
          "usage": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "name": "neutral",
          "hex": "#ececec",
          "rgb": "#ececec",
          "hsl": "#ececec",
          "usage": [
            "inline-style"
          ]
        },
        {
          "name": "neutral",
          "hex": "rgb(0, 186, 33)",
          "rgb": "rgb(0, 186, 33)",
          "hsl": "rgb(0, 186, 33)",
          "usage": [
            "inline-style"
          ]
        }
      ],
      "semantic": [],
      "extracted": [
        {
          "hex": "rgb(38, 61, 5)",
          "frequency": 14,
          "context": [
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "rgb(165, 244, 47)",
          "frequency": 14,
          "context": [
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "#000",
          "frequency": 4,
          "context": [
            "inline-style",
            "inline-style",
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "rgb(9, 20, 1)",
          "frequency": 2,
          "context": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "rgb(0, 0, 0)",
          "frequency": 2,
          "context": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "rgb(255, 255, 255)",
          "frequency": 2,
          "context": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "#fff",
          "frequency": 2,
          "context": [
            "inline-style",
            "inline-style"
          ]
        },
        {
          "hex": "#ececec",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(0, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(13, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(27, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(40, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(54, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(67, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(81, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(94, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(107, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(121, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(134, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        },
        {
          "hex": "rgb(148, 186, 33)",
          "frequency": 1,
          "context": [
            "inline-style"
          ]
        }
      ]
    },
    "typography": {
      "fonts": [],
      "scales": [],
      "hierarchy": []
    },
    "spacing": {
      "unit": "px",
      "scale": [
        {
          "name": "space-1rem",
          "value": "1rem",
          "pixelValue": 1,
          "usage": [
            "margin",
            "padding",
            "gap"
          ]
        },
        {
          "name": "space-4px 6px",
          "value": "4px 6px",
          "pixelValue": 4,
          "usage": [
            "margin",
            "padding",
            "gap"
          ]
        },
        {
          "name": "space-2px",
          "value": "2px",
          "pixelValue": 2,
          "usage": [
            "margin",
            "padding",
            "gap"
          ]
        }
      ],
      "patterns": [
        {
          "type": "margin",
          "values": [
            "1rem"
          ],
          "frequency": 1
        },
        {
          "type": "padding",
          "values": [
            "4px 6px"
          ],
          "frequency": 1
        },
        {
          "type": "gap",
          "values": [
            "2px"
          ],
          "frequency": 1
        }
      ]
    },
    "components": [
      {
        "name": "Button",
        "type": "button",
        "variants": [
          {
            "name": "sc-13eb552b-1",
            "styles": {
              "backgroundColor": "",
              "color": "",
              "border": "",
              "borderRadius": "",
              "padding": ""
            },
            "usage": "button component"
          },
          {
            "name": "sc-13eb552b-1",
            "styles": {
              "backgroundColor": "",
              "color": "",
              "border": "",
              "borderRadius": "",
              "padding": ""
            },
            "usage": "button component"
          },
          {
            "name": "sc-13f22814-15",
            "styles": {
              "backgroundColor": "",
              "color": "",
              "border": "",
              "borderRadius": "",
              "padding": ""
            },
            "usage": "button component"
          }
        ],
        "states": [],
        "styles": {
          "display": "inline-block",
          "cursor": "pointer"
        }
      },
      {
        "name": "Input",
        "type": "input",
        "variants": [
          {
            "name": "color",
            "styles": {
              "border": "",
              "borderRadius": "",
              "padding": "",
              "fontSize": ""
            },
            "usage": "form input"
          },
          {
            "name": "text",
            "styles": {
              "border": "",
              "borderRadius": "",
              "padding": "",
              "fontSize": ""
            },
            "usage": "form input"
          },
          {
            "name": "text",
            "styles": {
              "border": "",
              "borderRadius": "",
              "padding": "",
              "fontSize": ""
            },
            "usage": "form input"
          },
          {
            "name": "text",
            "styles": {
              "border": "",
              "borderRadius": "",
              "padding": "",
              "fontSize": ""
            },
            "usage": "form input"
          },
          {
            "name": "text",
            "styles": {
              "border": "",
              "borderRadius": "",
              "padding": "",
              "fontSize": ""
            },
            "usage": "form input"
          }
        ],
        "states": [],
        "styles": {}
      }
    ],
    "tokens": [],
    "methodology": "BEM (Block Element Modifier)"
  },
  "layout": {
    "system": {
      "type": "flexbox",
      "customImplementation": false
    },
    "responsive": {
      "approach": "mobile-first",
      "breakpoints": [],
      "strategy": [
        "viewport-meta"
      ]
    },
    "grid": {
      "type": "flexbox-grid",
      "columns": 12,
      "gutters": "1rem"
    },
    "flexbox": {
      "containers": [],
      "patterns": []
    },
    "containers": []
  },
  "effects": {
    "cssAnimations": [],
    "cssTransitions": [],
    "jsAnimations": [],
    "libraries": [],
    "interactions": []
  },
  "resources": {
    "images": [
      {
        "src": "kigen-logo-color.png",
        "alt": "",
        "dimensions": {
          "width": 0,
          "height": 0
        },
        "format": "png",
        "loading": "eager",
        "responsive": false,
        "optimization": {
          "webp": false,
          "avif": false,
          "lazy": false
        }
      },
      {
        "src": "twitter.svg",
        "alt": "",
        "dimensions": {
          "width": 0,
          "height": 0
        },
        "format": "svg",
        "loading": "eager",
        "responsive": false,
        "optimization": {
          "webp": false,
          "avif": false,
          "lazy": false
        }
      }
    ],
    "fonts": [],
    "icons": [
      {
        "name": "up-down-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "chevron-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "chevron-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "tw-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "tw-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "unnamed",
        "set": "svg",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "copy-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "copy-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      },
      {
        "name": "copy-icon",
        "set": "custom-icons",
        "type": "svg",
        "size": "16px",
        "color": "inherit"
      }
    ],
    "videos": [],
    "documents": [],
    "optimization": {
      "imageOptimization": false,
      "lazyLoading": false,
      "compression": false,
      "caching": []
    }
  },
  "functionality": {
    "frameworks": [
      {
        "name": "React",
        "version": "unknown",
        "usage": [
          "Component rendering",
          "State management",
          "Virtual DOM"
        ]
      }
    ],
    "libraries": [
      {
        "name": "jQuery",
        "version": "unknown",
        "purpose": "DOM manipulation",
        "methods": [
          "$",
          "ajax",
          "animate",
          "css",
          "html"
        ]
      },
      {
        "name": "Lodash",
        "version": "unknown",
        "purpose": "Utility functions",
        "methods": [
          "map",
          "filter",
          "reduce",
          "debounce",
          "throttle"
        ]
      }
    ],
    "functions": [
      {
        "name": "gtag",
        "type": "function",
        "parameters": [],
        "returnType": "unknown",
        "purpose": "unknown"
      }
    ],
    "eventHandlers": [
      {
        "event": "tent",
        "type": "inline",
        "target": "element",
        "action": "custom"
      }
    ],
    "apis": [],
    "modules": []
  },
  "configuration": {
    "bundler": {
      "name": "Webpack",
      "entryPoints": [],
      "outputDir": "dist",
      "plugins": [
        "HtmlWebpackPlugin",
        "MiniCssExtractPlugin"
      ]
    },
    "transpilation": {
      "typescript": false,
      "babel": false,
      "target": "",
      "modules": ""
    },
    "optimization": {
      "minification": true,
      "treeshaking": false,
      "codesplitting": true,
      "compression": false
    },
    "environment": {
      "nodeVersion": "",
      "packageManager": "npm",
      "variables": []
    },
    "scripts": [
      "dev",
      "build",
      "preview",
      "lint",
      "test"
    ]
  },
  "replicationGuide": {
    "setup": {
      "prerequisites": [
        "Node.js 18+ installed",
        "Package manager (npm, yarn, or pnpm)",
        "Modern web browser",
        "Code editor (VS Code recommended)",
        "Git for version control"
      ],
      "installation": [
        "Clone or create new project directory",
        "Initialize package.json with npm init",
        "Install detected dependencies and devDependencies",
        "Configure build tools and bundler",
        "Set up development environment"
      ],
      "configuration": [
        "Configure TypeScript if detected",
        "Set up CSS preprocessing tools",
        "Configure linting and formatting tools",
        "Set up environment variables",
        "Configure build and development scripts"
      ]
    },
    "implementation": [
      {
        "step": 1,
        "title": "Project Structure Setup",
        "description": "Create the basic project structure and configuration files",
        "tasks": [
          "Create src/ directory for source code",
          "Set up public/ directory for static assets",
          "Configure build output directory",
          "Create component and utility directories"
        ]
      },
      {
        "step": 2,
        "title": "HTML Structure Implementation",
        "description": "Recreate the HTML structure and semantic elements",
        "tasks": [
          "Implement main HTML template",
          "Add meta tags and SEO elements",
          "Set up proper document structure",
          "Include necessary script and style references"
        ]
      },
      {
        "step": 3,
        "title": "CSS Styling Implementation",
        "description": "Implement all detected styles and design systems",
        "tasks": [
          "Recreate CSS variables and custom properties",
          "Implement responsive design breakpoints",
          "Add animations and transitions",
          "Set up CSS methodology (BEM, CSS Modules, etc.)"
        ]
      },
      {
        "step": 4,
        "title": "JavaScript Functionality",
        "description": "Implement interactive features and business logic",
        "tasks": [
          "Recreate detected JavaScript functions",
          "Implement event handlers and user interactions",
          "Set up state management if needed",
          "Integrate with detected APIs and services"
        ]
      },
      {
        "step": 5,
        "title": "Assets and Resources",
        "description": "Integrate all media assets and external resources",
        "tasks": [
          "Download and optimize images",
          "Set up font loading and fallbacks",
          "Implement icon systems",
          "Configure asset optimization"
        ]
      }
    ],
    "testing": {
      "types": [
        "Unit testing for utility functions",
        "Component testing for UI elements",
        "Integration testing for user flows",
        "Visual regression testing",
        "Performance testing"
      ],
      "tools": [
        "Jest for unit testing",
        "Testing Library for component testing",
        "Cypress or Playwright for E2E testing",
        "Lighthouse for performance testing"
      ],
      "coverage": "80%+ code coverage recommended",
      "commands": [
        "npm test - Run unit tests",
        "npm run test:e2e - Run end-to-end tests",
        "npm run test:coverage - Generate coverage report"
      ]
    },
    "deployment": {
      "platforms": [
        "Vercel (recommended for static sites)",
        "Netlify (good for JAMstack)",
        "GitHub Pages (for simple static sites)",
        "AWS S3 + CloudFront (for scalable hosting)",
        "Docker containers (for complex applications)"
      ],
      "requirements": [
        "Build process configured",
        "Environment variables set",
        "Domain and SSL certificate",
        "CDN configuration for assets"
      ],
      "steps": [
        "Build production version",
        "Test production build locally",
        "Configure deployment platform",
        "Set up continuous deployment",
        "Monitor and optimize performance"
      ],
      "environment": [
        "NODE_ENV=production",
        "API endpoints for production",
        "Analytics and monitoring tools",
        "Error tracking configuration"
      ]
    },
    "considerations": [
      {
        "category": "Performance",
        "items": [
          "Optimize images and assets for web",
          "Implement lazy loading for heavy content",
          "Use code splitting for large applications",
          "Configure caching strategies"
        ]
      },
      {
        "category": "Accessibility",
        "items": [
          "Ensure proper semantic HTML structure",
          "Add ARIA labels and descriptions",
          "Test with screen readers",
          "Maintain proper color contrast ratios"
        ]
      },
      {
        "category": "SEO",
        "items": [
          "Implement proper meta tags",
          "Add structured data markup",
          "Optimize for Core Web Vitals",
          "Create XML sitemap"
        ]
      },
      {
        "category": "Security",
        "items": [
          "Sanitize user inputs",
          "Implement Content Security Policy",
          "Use HTTPS for all communications",
          "Keep dependencies updated"
        ]
      },
      {
        "category": "Maintenance",
        "items": [
          "Set up automated testing pipeline",
          "Configure dependency updates",
          "Implement error monitoring",
          "Document code and architecture decisions"
        ]
      }
    ]
  },
  "assets": {
    "images": [],
    "fonts": [],
    "icons": [],
    "videos": []
  },
  "pages": [
    {
      "url": "https://kigen.design/color",
      "title": "Color Generator – Kigen",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/",
      "title": "Kigen - Figma Design System Generator",
      "description": "Sin descripción"
    },
    {
      "url": "https://s.vjy.me/kigen-plugin",
      "title": "Kigen - Generate Design System Variable, Style & Document | Figma",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/#features",
      "title": "Kigen - Figma Design System Generator",
      "description": "Sin descripción"
    },
    {
      "url": "https://overlayz.studio/?figmaplugin",
      "title": "Overlayz Studio",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/color#features",
      "title": "Color Generator – Kigen",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/color#faq",
      "title": "Color Generator – Kigen",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/color#",
      "title": "Color Generator – Kigen",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/#",
      "title": "Kigen - Figma Design System Generator",
      "description": "Sin descripción"
    },
    {
      "url": "https://s.vjy.me/kigen-pro",
      "title": "Kigen Pro (Figma Plugin) - Checkout",
      "description": "Sin descripción"
    },
    {
      "url": "https://s.vjy.me/kigen-ui",
      "title": "Kigen UI Kit",
      "description": "Sin descripción"
    },
    {
      "url": "https://vjy.me/?kigen",
      "title": "realvjy ✦ designer, maker, dreamer",
      "description": "Sin descripción"
    },
    {
      "url": "https://startupfa.me/s/kigen?utm_source=kigen.design",
      "title": "Kigen - Figma Design System Generator",
      "description": "Sin descripción"
    },
    {
      "url": "https://kigen.design/#faq",
      "title": "Kigen - Figma Design System Generator",
      "description": "Sin descripción"
    }
  ],
  "replicationInstructions": {
    "priority": "Follow this exact order for replication",
    "steps": [
      "1. Set up project structure and dependencies",
      "2. Configure build tools and development environment",
      "3. Implement base styles and design system",
      "4. Create layout components and responsive structure",
      "5. Add interactive functionality and JavaScript",
      "6. Optimize assets and implement performance features",
      "7. Test across devices and browsers"
    ],
    "criticalNotes": [
      "Maintain exact color palette and typography",
      "Preserve responsive breakpoints and layout behavior",
      "Replicate all animations and interactive effects",
      "Ensure accessibility standards are met",
      "Optimize for performance metrics"
    ]
  }
}